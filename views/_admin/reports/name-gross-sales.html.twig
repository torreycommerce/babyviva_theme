{# {% set variants = api.get('/variant', {query:{id:{'$in':[4,5,6,7]}},attributes:['weight','price','poopoo'],aggregate:{'$group':{'$by':'brad','poopoo':{'$sum':'weight'}}}}) %} #}
<script type="text/javascript" src="{{app.url}}/js/charts/charts.js"></script>

{% set orders = api.get('/order', {
    'query':{
        '$and': [
            {'date_created': {'$gte': "now"|date_modify("-1year")|date("Y-m-d h:i:s")}},
            {'date_created': {'$lte': "now"|date("Y-m-d h:i:s")}}
        ]
    },
    'aggregate':{
        '$group':{
            '$by':{
                'month': {
                    '$month': 'date_created',
                    '$sort': '-1'
                }
            },
            'avg_total': {
               '$avg': 'total'
            },
            'count_order': {
               '$count': 'total'
            },
            'max_total': {
               '$max': 'total'
            },
            'global_total': {
               '$sum': 'total'
            },
            'min_total': {
               '$min': 'total'
            }
        }
    },
    'attributes':['id', 'max_total', 'min_total', 'global_total', 'month', 'avg_total', 'count_order']
}) %}

{% set first = api.get('/order', {
    'limit': 1,
    'offset': 0,
    'attributes':['id', 'date_created'],
    'sort':{'id':1}
}) %}

{% set end = api.get('/order', {
    'limit': 1,
    'offset': 0,
    'attributes':['id', 'date_created'],
    'sort':{'id':-1}
}) %}
<h3>Order information between {{ "now"|date_modify("-1year")|date("M jS Y") }} and {{ "now"|date("M jS Y") }}</h3>
<canvas width="918" height="409" style="width: 918px; height: 409px;" id="orders"></canvas>
<div style="clear: both; height: 50px;"></div>
<h3>Turnover between {{ "now"|date_modify("-1year")|date("M jS Y") }} and {{ "now"|date("M jS Y") }}</h3>
<canvas width="918" height="409" style="width: 918px; height: 409px;" id="turnover"></canvas>

<script type="text/javascript">

    var labels = [];
    var avg = [];
    var max = [];
    var min = [];
    var count = [];
    var global = [];
    {% for order in orders %}
        var row = {{order|json_encode()}}
        console.log(row);
        labels.push(row["month"]);
        avg.push(parseInt(row["avg_total"]));
        max.push(parseInt(row["max_total"]));
        min.push(parseInt(row["min_total"]));
        count.push(parseInt(row["count_order"]));
        global.push(parseInt(row["global_total"]));
    {% endfor %}

    var turnover = {
        labels: labels,
        datasets: [
            {
                label: "Turnover",
                fillColor: "rgba(210,211,214,0.2)",
                strokeColor: "rgba(43,188,224,1)",
                pointColor: "rgba(49,51,56,1)",
                pointStrokeColor: "#fff",
                pointHighlightFill: "#fff",
                pointHighlightStroke: "rgba(49,51,56,1)",
                data: global
            }
        ]
    }

    var data = {
        labels: labels,
        datasets: [
            {
                label: "Average order",
                fillColor: "rgba(210,211,214,0.2)",
                strokeColor: "rgba(43,188,224,1)",
                pointColor: "rgba(49,51,56,1)",
                pointStrokeColor: "#fff",
                pointHighlightFill: "#fff",
                pointHighlightStroke: "rgba(49,51,56,1)",
                data: avg
            },
            {
                label: "Maximum order",
                fillColor: "rgba(210,211,214,0.2)",
                strokeColor: "rgba(239,161,49,1)",
                pointColor: "rgba(49,51,56,1)",
                pointStrokeColor: "#fff",
                pointHighlightFill: "#fff",
                pointHighlightStroke: "rgba(49,51,56,1)",
                data: max
            },
            {
                label: "Minimum order",
                fillColor: "rgba(210,211,214,0.2)",
                strokeColor: "rgba(147,88,172,1)",
                pointColor: "rgba(49,51,56,1)",
                pointStrokeColor: "#fff",
                pointHighlightFill: "#fff",
                pointHighlightStroke: "rgba(49,51,56,1)",
                data: min
            },
            {
                label: "Number of orders",
                fillColor: "rgba(210,211,214,0.2)",
                strokeColor: "rgb(231, 60, 60)",
                pointColor: "rgba(49,51,56,1)",
                pointStrokeColor: "#fff",
                pointHighlightFill: "#fff",
                pointHighlightStroke: "rgba(49,51,56,1)",
                data: count
            }
        ]
    };

    var options = {

        ///Boolean - Whether grid lines are shown across the chart
        scaleShowGridLines : true,

        //String - Colour of the grid lines
        scaleGridLineColor : "rgba(0,0,0,.05)",

        //Number - Width of the grid lines
        scaleGridLineWidth : 1,

        //Boolean - Whether the line is curved between points
        bezierCurve : true,

        //Number - Tension of the bezier curve between points
        bezierCurveTension : 0.4,

        //Boolean - Whether to show a dot for each point
        pointDot : true,

        //Number - Radius of each point dot in pixels
        pointDotRadius : 4,

        //Number - Pixel width of point dot stroke
        pointDotStrokeWidth : 1,

        //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
        pointHitDetectionRadius : 20,

        //Boolean - Whether to show a stroke for datasets
        datasetStroke : true,

        //Number - Pixel width of dataset stroke
        datasetStrokeWidth : 2,

        //Boolean - Whether to fill the dataset with a colour
        datasetFill : true
    };

    var ctx = document.getElementById("orders").getContext("2d");
    var myLineChart = new Chart(ctx).Line(data, options);

    var ctx = document.getElementById("turnover").getContext("2d");
    var myLineChart = new Chart(ctx).Line(turnover, options);
</script>

